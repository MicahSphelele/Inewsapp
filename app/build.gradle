apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

//def gradleProps = rootProject.file("./local.properties")
//def gradleProperties = new Properties()
//gradleProperties.load(new FileInputStream(gradleProps))

android {
    compileSdkVersion Versions.maxSdkVersion
    buildToolsVersion Versions.buildToolsVersion

    defaultConfig {
        applicationId "sphe.inews"
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.maxSdkVersion
        versionCode 4
        versionName "v1.2.3"
        testInstrumentationRunner "sphe.inews.HiltTestRunner"
        buildConfigField("String", "TEST_STRING", "gradleProperties['TEST_STRING']")
        multiDexEnabled true
    }

    buildFeatures {

        dataBinding true
        // for view binding:
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

//afterEvaluate {
//    android.applicationVariants.all { variant ->
//        System.err.println("applicationVariant : " + variant.name)
//    }
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:${Versions.junit}"
    //noinspection GradleDependency
    androidTestImplementation "androidx.test.espresso:espresso-core:${Versions.androidxEspresso}"
    //noinspection GradleDependency
    androidTestImplementation ("androidx.test.espresso:espresso-contrib:${Versions.androidxEspresso}") {
        exclude group: 'org.checkerframework', module: 'checker'
    }
    //noinspection GradleDependency
    androidTestImplementation "androidx.test.espresso:espresso-intents:${Versions.androidxEspresso}"
    //noinspection GradleDependency
    debugImplementation "androidx.fragment:fragment-testing:${Versions.fragmentTesting}"
    androidTestImplementation "androidx.test:rules:${Versions.androidxTestRules}"
    //androidTestImplementation "androidx.test:core:${Versions.androidxTestRules}"
    androidTestImplementation "androidx.test:core-ktx:${Versions.androidxTestRules}"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    //noinspection GradleDependency
    androidTestImplementation ("androidx.test.espresso:espresso-idling-resource:${Versions.androidxEspresso}") {
        exclude group: 'org.checkerframework', module: 'checker'
    }
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0-native-mt" //1.2.1
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"

    //Nav Controller Testing
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.5"
    //Hilt Testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:${Versions.hiltVersion}"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${Versions.hiltVersion}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    implementation "androidx.appcompat:appcompat:${Versions.androidXAppcompat}"
    implementation "androidx.core:core-ktx:${Versions.androidXCoreKTX}"
    implementation "androidx.constraintlayout:constraintlayout:${Versions.androidXConstraints}"
    implementation "androidx.legacy:legacy-support-v4:${Versions.androidxLegacySupport}"
    implementation "androidx.recyclerview:recyclerview:${Versions.androidxRecyclerView}"
    implementation "androidx.cardview:cardview:${Versions.androidxCardView}"
    implementation "androidx.browser:browser:${Versions.androidxBrowser}"
    implementation "androidx.multidex:multidex:2.0.1"

    //AndroidX support design
    implementation "com.google.android.material:material:${Versions.material}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${Versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${Versions.retrofit}"

    //ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${Versions.androidxLifeCycleExt}"

    //Room Database
    implementation "androidx.room:room-rxjava2:${Versions.androidxRoomRxJava}"
    implementation "androidx.room:room-ktx:${Versions.androidxRoom}"
    kapt "androidx.room:room-compiler:${Versions.androidxRoomRxJava}"

    //RxAndroid
    implementation "io.reactivex.rxjava3:rxandroid:${Versions.rxJavaAndroid}"

    //RxJava
    implementation "io.reactivex.rxjava3:rxjava:${Versions.rxJava}"

    // Reactive Streams (convert Observable to LiveData)
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:${Versions.androidxLifeCycleReactiveStreams}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${Versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${Versions.glide}"

    //Data Binding compiler
    kapt "com.android.databinding:compiler:${Versions.dataBinding}"

    // Architecture comp. navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${Versions.androidxNavigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${Versions.androidxNavigation}"

    //Custom Libraries
    implementation  "com.pierfrancescosoffritti.androidyoutubeplayer:core:${Versions.customYoutubePlayer}"
    implementation "com.facebook.shimmer:shimmer:${Versions.customShimmer}"
    implementation "com.google.code.gson:gson:${Versions.gson}"
    implementation "com.airbnb.android:lottie:${Versions.lottie}"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    //Hilt
    implementation "com.google.dagger:hilt-android:${Versions.hiltVersion}"
    kapt "com.google.dagger:hilt-android-compiler:${Versions.hiltCompilerVersion}"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:${Versions.hiltLifecycleViewModelVersion}"
    kapt "androidx.hilt:hilt-compiler:${Versions.hiltLifecycleViewModelVersion}"

    implementation "com.google.android.gms:play-services-location:${Versions.locationService}"
}

kapt {
    correctErrorTypes = true
}

hilt {
    enableTransformForLocalTests = true
}